[uwsgi]
plugins = 0:router_cache
module = app
harakiri = 10
callable = app
master = true
; lazy-apps = true
logto = log.log
stats = stats.socket

workers = 64          # maximum number of workers

cheaper-algo = spare2
cheaper_overload = 5
cheaper = 8           # tries to keep 8 idle workers
cheaper-initial = 8   # starts with minimal workers
cheaper-step = 4      # spawn at most 4 workers at once
cheaper-idle = 60     # cheap one worker per minute while idle

no-orphans = true
max-requests = 100
listen = 100

socket = pf.sock
chmod-socket = 660
vacuum = true

; create a cache with 100 items (default size per-item is 64k)
cache2 = name=mycache,items=100

; create a cache for images with dynamic size (images can be big, so do not waste memory)
cache2 = name=images,items=20,bitmap=1,blocks=100

; a cache for css (20k per-item is more than enough)
cache2 = name=stylesheets,items=30,blocksize=20000

; load the mime types engine
mime-file = /etc/mime.types

; at each request starting with /img check it in the 'images' cache (use mime types engine for the content type)
route = ^/static/uploads/(.+) cache:key=/static/uploads/$1,name=images,mime=1

; at each request ending with .css check it in the 'stylesheets' cache
route = \.css$ cache:key=${REQUEST_URI},name=stylesheets,content_type=text/css

; fallback to text/html all of the others request
route = .* cache:key=${REQUEST_URI},name=mycache

; store each successful request (200 http status code) in the 'mycache' cache using the REQUEST_URI as key
route = .* cachestore:key=${REQUEST_URI},name=mycache
; store images and stylesheets in the corresponding caches
route = ^/static/uploads/ cachestore:key=${REQUEST_URI},name=images
route = ^/static/css/ cachestore:key=${REQUEST_URI},name=stylesheets


enable-threads = true
single-interpreter = true
; thunder-lock
memory-report